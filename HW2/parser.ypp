%{
	#include <iostream>
	#include <stdlib.h>

	using namespace std;
#define YYSTYPE int
	extern int yylex();
	int yyerror(const char * message);
%}



//garbage
//%token tklp tkrp
//%token<constVal> tkconst
//%left tkor
//%left tkand

%token RBRACE
%token LBRACE
%token Type
%token ID
%token SC
%token RETURN




%type<exp> Exp

%%
//example
//S	:	Exp
//		{
//			cout<<"The expression's value is "<<$1.value<<endl;
//		}
//	;

Program:    Statements;
Statements:    Statement;
Statements:   Statements Statement;
Statement: LBRACE Statements RBRACE {printf("Noa kirrel\n");};
Statement: RETURN SC;


//Exp	:	Exp tkand Exp { $$.value = $1.value && $3.value; }
//	|	Exp tkor Exp { $$.value = $1.value || $3.value; }
//	|	tklp Exp tkrp { $$ = $2; }
//	|	tkconst	{ $$.value = $1; }
//	;

%%

int main()
{
	yyparse();
}

//int yyerror(const char * message)
//{
//	cout<<"Parse error: "<<message<<endl;
//	exit(0);
//}